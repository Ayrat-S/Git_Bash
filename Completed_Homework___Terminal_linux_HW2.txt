Completed_Homework___Terminal_linux_HW2
@Ayrat_Sharifullin

Ссылка на домашнее задание (Termial_HM_2):
https://docs.google.com/document/d/1bcf5r_dd0PZj1j0KZO7OQzLUSRm-RqnjVYJBZK4bIUI/edit


1. Сделать папку dir_1
mkdir dir_1

2. Зайти в папку dir_1
cd dir_1

3. Создать папку inner_dir_1
mkdir inner_dir_1

4. Посмотреть где ты находишься
pwd

5. Находясь в папке dir_1 создать пустой текстовый файл tf_1.txt
cat > tf_1.txt
Ctrl + D

6. Находясь в папке dir_1 через команду cat создать текстовый файл tf_2.txt со следующими строками:
- the first 1
- the second 2
- the third 3

Вариант 1:
cat > tf_2.txt
- the first 1
- the second 2
- the third 3
Enter (!!! важно применить в конце всего текста, чтобы при последующем добавлении текст всегда начинался с новой строки)
Ctrl + D

Вариант 2:
cat > tf_2.txt | echo -e "- the first 1\n- the second 2\n- the third 3" >> tf_2.txt
Ctrl + D

7. Зайти в папку inner_dir_1
cd inner_dir_1

8. Через cat сделать текстовый файл tf_3.txt c любыми строками

Вариант 1:
cat > tf_3.txt
line1
line2
line3
Enter
Ctrl + D

Вариант 2 (делаем в сцепке с echo):
cat > tf_3.txt | echo -e "line1\nline2\nline3" >> tf_3.txt
Ctrl + D
P.S. Флаг -e позволяет интерпретировать символы обратной косой черты. 
Без него, по умолчанию команда echo будет печатать предоставленную строку, символ за символом.

9. Через cat добавить в текстовый файл tf_3.txt строку “the second 2”
cat >> tf_3.txt
“the second 2” 
Enter
Ctrl + D

P.S. В тексте задания применены английские двойные кавычки, которые не распознаются как функция в Bash. 
Кавычки нужно копировать, а не писать в командной строке.
В последующих заданиях ситуация повторяется.

10. Через cat добавить в текстовый файл tf_3.txt строку “the sec 2”
cat >> tf_3.txt
“the sec 2”
Enter 
Ctrl + D

11. Через cat добавить в текстовый файл tf_2.txt строку “the sec 3”
cat >> ../tf_2.txt
“the sec 3”
Enter
Ctrl + D

12. Через cat добавить в текстовый файл tf_3.txt строку “the SeCoNd 2”
cat >> tf_3.txt
“the SeCoNd 2”
Enter 
Ctrl + D

13. Через cat добавить в текстовый файл tf_2.txt строку “the seConD 2”
cat >> ../tf_2.txt
“the seConD 2”
Enter 
Ctrl + D

14. Сделать текстовый файл tf_4.txt в котором будет 15 строк.

Вариант 1:
cat > tf_4.txt
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
Enter 
Ctrl + D

Вариант 2:
echo -e "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15" > tf_4.txt

Вариант 3 (подойдет лучше, при создании нового файла, где крайне много строк, заменяя пробелы на строки, используя регулярное выражение через sed):
echo "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" > tf_4.txt | sed -i -e 's/\s\+/\n/g' tf_4.txt

Вариант 4 (подойдет лучше, при добавлении текста в существующий файл, путем использования буферного файла без регулярки):
echo -e "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15" > tf_4_buffer.txt | cat tf_4_buffer.txt >> tf_4.txt | rm tf_4_buffer.txt

Вариант 5 (подойдет лучше, при добавлении текста в существующий файл, путем использования буферного файла с регуляркой):
echo "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" > tf_4_buffer.txt | sed -i -e 's/\s\+/\n/g' tf_4_buffer.txt | cat tf_4_buffer.txt >> tf_4.txt | rm tf_4_buffer.txt

wc -l tf_4.txt (проверяем количество строк)

15. Сделать текстовый файл tF_5.txt в котором будет 13 строк.

Вариант 1:
cat > tF_5.txt
1
2
3
4
5
6
7
8
9
10
11
12
13
Enter 
Ctrl + D

Вариант 2:
echo -e "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13" > tF_5.txt

Вариант 3:
echo "1 2 3 4 5 6 7 8 9 10 11 12 13" > tF_5.txt | sed -i -e 's/\s\+/\n/g' tF_5.txt

Вариант 4:
echo -e "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13" > tF_5_buffer.txt | cat tF_5_buffer.txt >> tF_5.txt | rm tF_5_buffer.txt

Вариант 5:
echo "1 2 3 4 5 6 7 8 9 10 11 12 13" > tF_5_buffer.txt | sed -i -e 's/\s\+/\n/g' tF_5_buffer.txt | cat tF_5_buffer.txt >> tF_5.txt | rm tF_5_buffer.txt

wc -l tF_5.txt (проверяем количество строк)

16. Вывести список всех файлов в папке.
ls -la 

или ls -Ra в случае если нужно вывести список директориев с файлами во всех поддиректориях включительно; 
либо ls -Rla | grep -v / в случае если только файлы во всех поддиректориях включительно;
либо ls -la | grep -v / в случае если только файлы в текущей директории.

17. Выйти из папки inner_dir_1
cd ..

18. Вывести содержимое файла tf_3.txt в терминал.
find . -name tf_3.txt (сначала ищем путь к файлу и копируем результат: ./inner_dir_1/tf_3.txt)
cat ./inner_dir_1/tf_3.txt

19. Найти путь к файлу tf_4.txt
find . -name tf_4.txt

20. Очистить файл tf_4.txt от содержимого без удаления самого файла.
find . -name tf_4.txt (сначала ищем путь к файлу и копируем результат: ./inner_dir_1/tf_4.txt)

Вариант 1:
cat > ./inner_dir_1/tf_4.txt
Ctrl + D

Вариант 2:
> ./inner_dir_1/tf_4.txt

Вариант 3:
echo > ./inner_dir_1/tf_4.txt

Вариант 4 (если недостаточно прав для какой-либо из вышеперечисленных команд):
touch ./inner_dir_1/tf_4.txt

21. Найти путь к файлам у которых есть  “tf” в названии.
find . -name "tf*"

22. Найти путь к файлам у которых есть  “tf” в названии и буквы в любом регистре.
find . -iname "tf*"

23. Найти строки в файлах где есть комбинация букв “sec” в текущей папке
grep sec * (пробел звёздочка значит что в текущей папке)

24. Найти строки в файлах где есть комбинация букв “sec” в любом регистре в текущей папке
grep -i sec *

25. Найти строки в файлах где есть только комбинация букв “sec” в текущей папке
grep -w "sec" *

26. Найти строки в файлах где есть только комбинация букв “sec” в любом регистре в текущей папке
grep -wi "sec" *

27. Найти строки в файлах где есть комбинация букв “second” в текущей папке
grep second *

28. Найти строки в файлах где есть комбинация букв “second” в любом регистре в текущей папке
grep -i second *

29. Найти строки в файлах где есть комбинация букв “second” во всех папках ниже уровнем
grep -r second ./*/

30. Найти только путь и название файла в строках которых есть комбинация букв “second” в текущей папке
grep -l second *

31. Найти все строки во всех файлах где нет комбинации “second”
grep -Rv second

32. Найти только название и путь к файлам где нет комбинации “second”
grep -lRv second

33. Вывести в терминал 4 последних строк любого текстового файла
tail -n4 tf_2.txt

34. Вывести в терминал 4 первые строки любого текстового файла.
head -n4 tf_2.txt

35. Команда в одну строку. Создать папку и создать текстовый файл с содержиммым.
mkdir dir_9 ; echo "text1" > tf_6.txt

36. Команда в одну строку. Переместить в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
grep -rl sec | xargs mv -t ./dir_9
(Если файл не указан и задан параметр командной строки -r, то читается текущий каталог «.» и «-» в противном случае).
(Чтобы напечатать только имя файлов, в которых найден шаблон, используйте флаг -l).
(-t - считать файл-приемник директорией и копировать файл-источник в эту директорию.)

37. Команда в одну строку. Скопировать в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
grep -rl sec | xargs cp -t ./inner_dir_1

38. Команда в одну строку. Найти все строки c “sec” во всех текстовых файлах, скопировать и вставить эти строки в один новый созданный текстовый файл.
grep -r sec | cat >> grep_logs.txt

39. Команда в одну строку. Удалить текстовые файлы у которых в содержимом есть слово “sec”
grep -r sec | rm *.txt

40. Просто вывести в терминал строку “Good job!!”
printf '%b\n' 'Good job!!'


